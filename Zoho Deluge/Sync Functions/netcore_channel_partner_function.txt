void automation.netcore_channel_partner_function(Int channelpartnerId)
{
info "Processing Channel Partner ID: " + channelpartnerId;
channelpartnerData = zoho.crm.getRecordById("Accounts",channelpartnerId);
info channelpartnerData;
if(channelpartnerData == null)
{
	info "Failed to fetch Channel Partner data - channelpartnerData is null";
	return;
}
info "Channel Partner data fetched successfully";
webhookPayload = Map();
webhookPayload.put("Channel_Partner_Id",ifnull(channelpartnerId.toString(),""));
webhookPayload.put("Phone",ifnull(channelpartnerData.get("Phone"),""));
webhookPayload.put("Email",ifnull(channelpartnerData.get("Email"),""));
webhookPayload.put("Contact_Name",ifnull(channelpartnerData.get("Contact_name"),""));
webhookPayload.put("User_Type","Channel Partner");
ChannelpartnerOwner = ifnull(channelpartnerData.get("Owner"),null);
if(ChannelpartnerOwner != null && ChannelpartnerOwner.containKey("name"))
{
	webhookPayload.put("Channel_Partner_Owner",ifnull(ChannelpartnerOwner.get("name"),""));
}
else
{
	webhookPayload.put("Channel_Partner_Owner","NA");
}
webhookPayload.put("Type",ifnull(channelpartnerData.get("Type"),""));
webhookPayload.put("Created_Time",ifnull(channelpartnerData.get("Created_Time"),""));
webhookPayload.put("Modified_Time",ifnull(channelpartnerData.get("Modified_Time"),""));
webhookPayload.put("Is_Active","true");
// Handle Company Lookup
companyLookup = ifnull(channelpartnerData.get("Company_lookup"),null);
info "Companies lookup raw value: " + companyLookup;
if(companyLookup != null && companyLookup != "" && companyLookup.containKey("id"))
{
	companyId = ifnull(companyLookup.get("id"),"");
	info "Company ID: " + companyId;
	if(companyId != "")
	{
		companyDetails = zoho.crm.getRecordById("Companies",companyId);
		info "Companies Details: " + companyDetails;
		if(companyDetails != null)
		{
			info "Company data fetched successfully";
			webhookPayload.put("Company_Name",ifnull(companyDetails.get("Name"),""));
			webhookPayload.put("Active_Micromarket",ifnull(companyDetails.get("Active_Micromarket"),""));
			info "Companies Company Name: " + ifnull(companyDetails.get("Name"),"");
			info "Companies Active_Micromarket: " + ifnull(companyDetails.get("Active_Micromarket"),"");
		}
		else
		{
			info "Failed to fetch Companies data by cpId: " + companyId;
			webhookPayload.put("Company_Name","");
			webhookPayload.put("Active_Micromarket","");
		}
	}
}
else
{
	info "Company lookup missing or invalid; leaving Company fields as NA";
	webhookPayload.put("Company_Name","");
	webhookPayload.put("Active_Micromarket","");
}
info webhookPayload;
apiEndpoint = "https://qqvnbapdea.execute-api.ap-south-1.amazonaws.com/prod/sandbox-netcore-sync";
response = invokeurl
[
	url :apiEndpoint
	type :POST
	parameters:webhookPayload.toString()
	headers:{"Content-Type":"application/json"}
];
info response;
if(response != null)
{
	info "Webhook sent successfully for Channel Partner ID: " + channelpartnerId;
}
else
{
	info "Failed to send webhook for Channel Partner ID: " + channelpartnerId;
}
}