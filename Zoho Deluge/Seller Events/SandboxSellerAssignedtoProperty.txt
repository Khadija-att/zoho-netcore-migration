void automation.SandboxSellerAssignedtoProperty(Int propertyID)
{
info "Processing Property ID: " + propertyID;
propertyData = zoho.crm.getRecordById("Products",propertyID);
info "Property: " + propertyData;
if(propertyData == null)
{
	info "Failed to fetch Property data - propertyData is null";
	return;
}
info "Property data fetched successfully";
webhookPayload = Map();
webhookPayload.put("Property_Id",propertyID.toString());
webhookPayload.put("User_Type","Property");
webhookPayload.put("activity_name","seller_tagged_to_property");
sellerLookup = propertyData.get("Seller");
if(sellerLookup != null && sellerLookup != "")
{
	if(sellerLookup.containKey("id"))
	{
		sellerId = sellerLookup.get("id");
		sellerData = zoho.crm.getRecordById("Sellers",sellerId);
		info "Seller Details: " + sellerData;
		if(sellerData != null)
		{
			info "Seller data fetched successfully";
			webhookPayload.put("seller_name",sellerData.get("Name"));
		}
	}
}
info "Final payload:" + webhookPayload;
apiEndpoint = "https://qqvnbapdea.execute-api.ap-south-1.amazonaws.com/prod/sandbox-netcore-event";
response = invokeurl
[
	url :apiEndpoint
	type :POST
	parameters:webhookPayload.toString()
	headers:{"Content-Type":"application/json"}
];
info response;
if(response != null)
{
	info "Webhook sent successfully for Property ID: " + propertyID;
}
else
{
	info "Failed to send webhook for Property ID: " + propertyID;
}
}